name: CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches: [main, staging, develop]
  pull_request:
    branches: [main, staging, develop]

env:
  DEVOPS_URL: "Test.DevOps/ci-cd/github_action/notify_discord.yml@main"

jobs:
  notify-start:
    uses: DungPersonal/Test.DevOps/.github/workflows/notify_discord.yml@main
    with:
      status: "started"
      repository: ${{ github.repository }}
      workflow: ${{ github.workflow }}
      actor: ${{ github.actor }}
      event_name: ${{ github.event_name }}
      ref: ${{ github.ref }}
      sha: ${{ github.sha }}
      run_number: ${{ github.run_number }}
      url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
    secrets:
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}

  Full-CI-Pipeline:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: dotnet restore Test.DiscordApp.sln

      - name: Build
        run: dotnet build Test.DiscordApp.sln --no-restore

      - name: Test
        run: dotnet test Test.DiscordApp.sln --no-build --verbosity normal

  notify-end:
    needs: Full-CI-Pipeline
    if: ${{ always() }}
    uses: DungPersonal/Test.DevOps/.github/workflows/notify_discord.yml@main
    with:
      status: ${{ needs.Full-CI-Pipeline.result }}
      repository: ${{ github.repository }}
      workflow: ${{ github.workflow }}
      actor: ${{ github.actor }}
      event_name: ${{ github.event_name }}
      ref: ${{ github.ref }}
      sha: ${{ github.sha }}
      run_number: ${{ github.run_number }}
      url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
    secrets:
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
